/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Govrn, GovrnInterface } from "../Govrn";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_revokePeriod",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DeadlinePassed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "attestor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contribution",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "confidence",
        type: "uint8",
      },
    ],
    name: "Attest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_contribution",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_confidence",
        type: "uint8",
      },
    ],
    name: "attest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "attestations",
    outputs: [
      {
        internalType: "uint256",
        name: "contribution",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "confidence",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "dateOfSubmission",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "contribution",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "confidence",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "dateOfSubmission",
            type: "uint256",
          },
        ],
        internalType: "struct Govrn.Attestation[]",
        name: "_attestations",
        type: "tuple[]",
      },
    ],
    name: "bulkAttest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "name",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "details",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "dateOfSubmission",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dateOfEngagement",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
              },
            ],
            internalType: "struct Govrn.Contribution",
            name: "contribution",
            type: "tuple",
          },
        ],
        internalType: "struct Govrn.BulkContribution[]",
        name: "_contributions",
        type: "tuple[]",
      },
    ],
    name: "bulkMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "attestor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "contribution",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "confidence",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "dateOfSubmission",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct Govrn.PermitAttestation[]",
        name: "_permitAttestations",
        type: "tuple[]",
      },
    ],
    name: "bulkPermitAttest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_contributions",
        type: "uint256[]",
      },
    ],
    name: "bulkRevokeAttestation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_contribution",
        type: "uint256",
      },
    ],
    name: "burnContribution",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contributionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contributions",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "details",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "dateOfSubmission",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dateOfEngagement",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_details",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_dateOfSubmission",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dateOfEngagement",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_attestor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_contribution",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_confidence",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_dateOfSubmission",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitAttest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_contribution",
        type: "uint256",
      },
    ],
    name: "revokeAttestatation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revokePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260008055600060015534801561001957600080fd5b5060405161205f38038061205f83398101604081905261003891610118565b4660805261010d604080518082018252600581526423b7bb393760d91b602091820152815180830183526003815262302e3160e81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f07d324b0d39c500c175b9e9951bc89046972424482c0257033706f652c818a1c818401527f8cd160c72d102a6747abd189ac21d4a1f802e3fcc1bb8fc78cc4d558df0c7c2160608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b60a052600155610131565b60006020828403121561012a57600080fd5b5051919050565b60805160a051611f09610156600039600061069d015260006105740152611f096000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80637ecebe00116100b2578063aafd22be11610081578063c0ce846a11610066578063c0ce846a1461031d578063e42f0e0a14610330578063ffa1ad741461034357600080fd5b8063aafd22be14610301578063ba85da771461030a57600080fd5b80637ecebe001461029857806389a0f92f146102b85780639358c195146102db5780639e17e703146102ee57600080fd5b80635b18056b116101095780636352211e116100ee5780636352211e146101c35780636e0c90071461021e57806370a082311461027857600080fd5b80635b18056b146101a75780635e526aa3146101b057600080fd5b80631cee07001461013b5780633644e515146101695780634121d2b51461017f5780635aa110ff14610194575b600080fd5b61014e610149366004611514565b61038c565b60405161016096959493929190611598565b60405180910390f35b610171610570565b604051908152602001610160565b61019261018d366004611640565b6106bf565b005b6101926101a23660046116b4565b6106d9565b61017160005481565b6101926101be366004611815565b6106e7565b6101f96101d1366004611514565b60009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610160565b61025b61022c366004611923565b6004602090815260009283526040808420909152908252902080546001820154600290920154909160ff169083565b6040805193845260ff909216602084015290820152606001610160565b610171610286366004611946565b60026020526000908152604090205481565b6101716102a6366004611946565b60056020526000908152604090205481565b6102cb6102c6366004611514565b610754565b6040519015158152602001610160565b6101926102e93660046119f6565b610766565b6101926102fc366004611a92565b61077a565b61017160015481565b610192610318366004611c40565b610832565b61019261032b366004611d05565b610881565b6102cb61033e366004611514565b6108ca565b61037f6040518060400160405280600381526020017f302e31000000000000000000000000000000000000000000000000000000000081525081565b6040516101609190611d8b565b6003602052600090815260409020805460018201805473ffffffffffffffffffffffffffffffffffffffff90921692916103c590611d9e565b80601f01602080910402602001604051908101604052809291908181526020018280546103f190611d9e565b801561043e5780601f106104135761010080835404028352916020019161043e565b820191906000526020600020905b81548152906001019060200180831161042157829003601f168201915b50505050509080600201805461045390611d9e565b80601f016020809104026020016040519081016040528092919081815260200182805461047f90611d9e565b80156104cc5780601f106104a1576101008083540402835291602001916104cc565b820191906000526020600020905b8154815290600101906020018083116104af57829003601f168201915b5050505050908060030154908060040154908060050180546104ed90611d9e565b80601f016020809104026020016040519081016040528092919081815260200182805461051990611d9e565b80156105665780601f1061053b57610100808354040283529160200191610566565b820191906000526020600020905b81548152906001019060200180831161054957829003601f168201915b5050505050905086565b60007f0000000000000000000000000000000000000000000000000000000000000000461461069a5750604080518082018252600581527f476f76726e00000000000000000000000000000000000000000000000000000060209182015281518083018352600381527f302e3100000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f07d324b0d39c500c175b9e9951bc89046972424482c0257033706f652c818a1c818401527f8cd160c72d102a6747abd189ac21d4a1f802e3fcc1bb8fc78cc4d558df0c7c2160608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6106cf8888888888888888610a13565b5050505050505050565b6106e38282610f26565b5050565b60005b81518110156106e357600082828151811061070757610707611df1565b60200260200101519050610741816000015182602001518360400151846060015185608001518660a001518760c001518860e00151610a13565b508061074c81611e4f565b9150506106ea565b600061076082336110ea565b92915050565b610773858585858561123e565b5050505050565b60005b81518110156106e357600082828151811061079a5761079a611df1565b602090810291909101015180515190915073ffffffffffffffffffffffffffffffffffffffff1633146107f9576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051602081015160408201516060830151608084015160a09094015161081f949061123e565b508061082a81611e4f565b91505061077d565b60005b81518110156106e357600082828151811061085257610852611df1565b6020026020010151905061086e81600001518260200151610f26565b508061087981611e4f565b915050610835565b60005b81518110156106e35760008282815181106108a1576108a1611df1565b602002602001015190506108b581336110ea565b505080806108c290611e4f565b915050610884565b60008181526003602052604081205473ffffffffffffffffffffffffffffffffffffffff16338203610928576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81163314610977576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083815260036020526040812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155906109b9600183018261143e565b6109c760028301600061143e565b600382016000905560048201600090556005820160006109e7919061143e565b50503360009081526002602052604081208054909190610a0690611e87565b9091555060019392505050565b42841015610a82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff88166000908152600560205260408120805491829190610ab683611e4f565b919050555060006001610ac7610570565b604080517ffd82be98d1cbf2ede8d2de1fe9b483d6a19f6d55c5dec1d48faadd7da1f41558602082015273ffffffffffffffffffffffffffffffffffffffff8e1691810191909152606081018c905260ff8b16608082015260a081018a905260c0810185905260e081018990526101000160405160208183030381529060405280519060200120604051602001610b909291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff881690820152606081018690526080810185905260a0016020604051602081039080840390855afa158015610c0c573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590610c8757508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610ced576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606401610a79565b60008981526003602052604090205473ffffffffffffffffffffffffffffffffffffffff16610d78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f436f6e747269627574696f6e20646f6573206e6f7420657869737400000000006044820152606401610a79565b600089815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8e16845290915290206002015415610e12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4174746573746174696f6e2065786973747300000000000000000000000000006044820152606401610a79565b600060405180606001604052808b81526020018a60ff16815260200189815250905080600460008c815260200190815260200160002060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360ff1602179055506040820151816002015590505050508873ffffffffffffffffffffffffffffffffffffffff167f958308ef6c8c573912724f1f0a92f69ce33e826d02a9084502969e69d0226d048989604051610f1392919091825260ff16602082015260400190565b60405180910390a2505050505050505050565b60008281526003602052604090205473ffffffffffffffffffffffffffffffffffffffff16610fb1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f436f6e747269627574696f6e20646f6573206e6f7420657869737400000000006044820152606401610a79565b600082815260046020908152604080832033845290915290206002015415611035576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4174746573746174696f6e2065786973747300000000000000000000000000006044820152606401610a79565b6040805160608101825283815260ff83811660208084018281524285870190815260008981526004845287812033808352908552908890208751815592516001840180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016919097161790955551600290910155845187815290810191909152919290917f958308ef6c8c573912724f1f0a92f69ce33e826d02a9084502969e69d0226d04910160405180910390a2505050565b600082815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152812060020154808203611186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4174746573746174696f6e20646f6573206e6f742065786973740000000000006044820152606401610a79565b60006111928242611ebc565b600154108015915061120c57505050600082815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff851684529091528120818155600180820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055600290910191909155610760565b6040517f70f65caa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336112a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610a79565b6000805481526003602052604090205473ffffffffffffffffffffffffffffffffffffffff16156112e5576000805490806112df83611e4f565b91905055505b6040805160c0810182523381526020808201888152828401889052606083018790526080830186905260a083018590526000805481526003835293909320825181547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161781559251805192939261137b926001850192019061147b565b506040820151805161139791600284019160209091019061147b565b50606082015160038201556080820151600482015560a082015180516113c791600584019160209091019061147b565b505033600090815260026020526040812080549250906113e683611e4f565b909155505060005460405190815233907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859060200160405180910390a260008054908061143283611e4f565b91905055505050505050565b50805461144a90611d9e565b6000825580601f1061145a575050565b601f01602090049060005260206000209081019061147891906114ff565b50565b82805461148790611d9e565b90600052602060002090601f0160209004810192826114a957600085556114ef565b82601f106114c257805160ff19168380011785556114ef565b828001600101855582156114ef579182015b828111156114ef5782518255916020019190600101906114d4565b506114fb9291506114ff565b5090565b5b808211156114fb5760008155600101611500565b60006020828403121561152657600080fd5b5035919050565b6000815180845260005b8181101561155357602081850181015186830182015201611537565b81811115611565576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff8716815260c0602082015260006115c760c083018861152d565b82810360408401526115d9818861152d565b905085606084015284608084015282810360a08401526115f9818561152d565b9998505050505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461162a57600080fd5b919050565b803560ff8116811461162a57600080fd5b600080600080600080600080610100898b03121561165d57600080fd5b61166689611606565b97506020890135965061167b60408a0161162f565b9550606089013594506080890135935061169760a08a0161162f565b925060c0890135915060e089013590509295985092959890939650565b600080604083850312156116c757600080fd5b823591506116d76020840161162f565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611733576117336116e0565b60405290565b6040516020810167ffffffffffffffff81118282101715611733576117336116e0565b60405160c0810167ffffffffffffffff81118282101715611733576117336116e0565b6040516060810167ffffffffffffffff81118282101715611733576117336116e0565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156117e9576117e96116e0565b604052919050565b600067ffffffffffffffff82111561180b5761180b6116e0565b5060051b60200190565b6000602080838503121561182857600080fd5b823567ffffffffffffffff81111561183f57600080fd5b8301601f8101851361185057600080fd5b803561186361185e826117f1565b6117a2565b81815260089190911b8201830190838101908783111561188257600080fd5b928401925b828410156119185761010084890312156118a15760008081fd5b6118a961170f565b6118b285611606565b8152858501358682015260406118c981870161162f565b90820152606085810135908201526080808601359082015260a06118ee81870161162f565b9082015260c0858101359082015260e0808601359082015282526101009093019290840190611887565b979650505050505050565b6000806040838503121561193657600080fd5b823591506116d760208401611606565b60006020828403121561195857600080fd5b61196182611606565b9392505050565b600082601f83011261197957600080fd5b813567ffffffffffffffff811115611993576119936116e0565b6119c460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016117a2565b8181528460208386010111156119d957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611a0e57600080fd5b853567ffffffffffffffff80821115611a2657600080fd5b611a3289838a01611968565b96506020880135915080821115611a4857600080fd5b611a5489838a01611968565b955060408801359450606088013593506080880135915080821115611a7857600080fd5b50611a8588828901611968565b9150509295509295909350565b60006020808385031215611aa557600080fd5b823567ffffffffffffffff80821115611abd57600080fd5b818501915085601f830112611ad157600080fd5b8135611adf61185e826117f1565b81815260059190911b83018401908481019088831115611afe57600080fd5b8585015b83811015611c3357803585811115611b1957600080fd5b86017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818c038101891315611b4d57600080fd5b611b55611739565b8983013588811115611b6657600080fd5b929092019160c0838e0383011215611b7d57600080fd5b611b8561175c565b9150611b928a8401611606565b8252604083013588811115611ba75760008081fd5b611bb58e8c83870101611968565b8b8401525060608084013589811115611bce5760008081fd5b611bdc8f8d83880101611968565b6040850152506080808501358285015260a0915081850135818501525060c084013589811115611c0c5760008081fd5b611c1a8f8d83880101611968565b9184019190915250908152845250918601918601611b02565b5098975050505050505050565b60006020808385031215611c5357600080fd5b823567ffffffffffffffff811115611c6a57600080fd5b8301601f81018513611c7b57600080fd5b8035611c8961185e826117f1565b81815260609182028301840191848201919088841115611ca857600080fd5b938501935b83851015611cf95780858a031215611cc55760008081fd5b611ccd61177f565b85358152611cdc87870161162f565b818801526040868101359082015283529384019391850191611cad565b50979650505050505050565b60006020808385031215611d1857600080fd5b823567ffffffffffffffff811115611d2f57600080fd5b8301601f81018513611d4057600080fd5b8035611d4e61185e826117f1565b81815260059190911b82018301908381019087831115611d6d57600080fd5b928401925b8284101561191857833582529284019290840190611d72565b602081526000611961602083018461152d565b600181811c90821680611db257607f821691505b602082108103611deb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e8057611e80611e20565b5060010190565b600081611e9657611e96611e20565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b600082821015611ece57611ece611e20565b50039056fea2646970667358221220f664c5825a00ea7d64d68a437771b0fa0c65bef5b7f64b2504f72211fbdbcf6064736f6c634300080d0033";

type GovrnConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovrnConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Govrn__factory extends ContractFactory {
  constructor(...args: GovrnConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _revokePeriod: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Govrn> {
    return super.deploy(_revokePeriod, overrides || {}) as Promise<Govrn>;
  }
  override getDeployTransaction(
    _revokePeriod: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_revokePeriod, overrides || {});
  }
  override attach(address: string): Govrn {
    return super.attach(address) as Govrn;
  }
  override connect(signer: Signer): Govrn__factory {
    return super.connect(signer) as Govrn__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovrnInterface {
    return new utils.Interface(_abi) as GovrnInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Govrn {
    return new Contract(address, _abi, signerOrProvider) as Govrn;
  }
}
